package signalling

import (
	"github.com/google/uuid"
	"github.com/pion/webrtc/v4"
)

const (
	// Defines the endpoint that clients and the signalling server listens on for request.
	//
	// The endpoint is defined by fmt.Sprintf("%s/%s", localaddress, networking.SIGNAL_ENDPOINT)
	SIGNAL_ENDPOINT = "signal"
)

// Holds all relevant information for the signalling server to route
// a request from offerer to answerer across the network
// in order to facilitate a new p2p connection between the two.
type SignallingOffer struct {
	// Information about the remove peer to whom we are sending the offer
	AnsweringPeerID PeerIdentifier

	// Hold the peer identifier information about the local (offering) client
	// To be given to the remote peer
	OfferingPeerID PeerIdentifier

	// The UUID of the offer as generated by the offering client
	// Will be used across several logs for correlation
	OfferUUID uuid.UUID

	WebRTCSessionDescription webrtc.SessionDescription
}

// Holds information from answering peer to offering peer
type SignallingAnswer struct {
	// The same UUID as given by the offering client
	OfferUUID uuid.UUID

	WebRTCSessionDescription webrtc.SessionDescription
}
